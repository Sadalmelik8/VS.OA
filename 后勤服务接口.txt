﻿﻿﻿0.登录（web，小程序）
服务号：MP_00000
手机号登录参数：{mobile,smscode,fsession}---手机号（工号），验证码（密码），fsession值
返回：json
ret={
id:0/1/2  （0失败，1成功，2重置密码）密码=手机号：重置密码
type:0/1   (0医院内部人员，1外包人员)
}

手機+驗證碼+ fsession =''
工號+密碼 +fsession='1'

1. 向指定号码发送验证码短信（web，小程序）
服务号：MP_00001
参数：{mobile,flag}  flag（0:登錄，1:重置密码）get傳
返回：json
ret={active:0/1/2}----0没有该手机号，1成功返回验证码，2激活
ret={id:0}返回失败


2.所有未完成的配送（小程序）
从标本配送表（T_specimen）获取status为已提交的标本信息和配送人为当前用户的且status为已提交/已接单/配送中的标本信息（按提交时间倒排）
服务号：MP_00002
参数：{del_no,flag}----手机号
院内人员（显示自己提交的记录）
外包人员（显示可以接的单和自己接到的单）
,0/1/2（0:已提交的，1:已验收的，2：已接单或配送中的）
返回：json
ret={operator,dept,level,arrtime,status,picktime,serialno}--发件人，科室，紧急度，要求送达时间，状态，取件时间，流水号
ret={id:0}返回失败

3.查看标本配送详情（web，小程序）
从标本配送表（T_specimen）获取点击的标本信息详情
服务号：MP_00003
参数：{serialno}----流水号
返回：json
ret={serialno,sampleno,operator,optime,dept,level,deliver,arrtime,accepter,acctime,status,picktime,opt_no,del_no,acc_no}
--流水号，标本号，发件人，发件时间，科室，紧急度，配送人，要求送达时间，验收人，验收时间，状态，取件时间，发件人或发件科室号码，配送人员号码，验收人或验收号码
ret={id:0}返回失败

4.接单（小程序）
在标本配送表（T_specimen）将status改为已接单，配送人为当前登录人员，del_no为当前号码，取件时间为当前时间
                    #什麼情況下可以接單#
服务号：MP_00004
参数：{serialno,cell_no}----流水号，手机号
返回：json
ret={id:0}返回失败	

5.扫码取件（小程序）
扫描二维码获取流水号，将流水号发到后台，后台判断该流水号的配送人号码是否是该用户手机号，如果是，将status改为配送中
服务号：MP_00005
参数：{serialno,qr}----流水号，安全
返回：json
ret={id:0}返回失败

6.生成二维码（小程序）
服务号：MP_00006
参数：{serialno}----流水号
返回：json
ret={qrcode}---二维码（流水号）
ret={id:0}返回失败

7.获取科室（web）
在标本配送表（T_specimen）通过传的级别对应返回各级别的科室
服务号：MP_00007
参数：{dept}-----科室
返回：json
ret={dept}---科室
ret={id:0}返回失败

8.获取配送人员（web）
在用户表(T_User)返回工种profession为1且状态status为上班的人员
服务号：MP_00008
参数：{}
返回：json
ret={deliver}---配送人
ret={id:0}返回失败

9.获取标本类型（web）
调用服务返回全部标本类型
服务号：MP_00009
参数：{}
返回：json
ret={sampletype}---标本类型
ret={id:0}返回失败

10.提交标本（web）
服务号：MP_00010
标本号数据处理一下（格式2018,2019,2010）
参数：{sampleno,sampletype,dept,level,deliver,arrtime,picktime}
---标本号，标本类型，科室，紧急度，配送人，要求送达时间，取件时间
返回：json
ret={id:0}返回失败

11.查看所有标本配送（web）
在标本配送表（T_specimen）返回所有标本配送（按提交时间倒排）每页显示15条数据
如果数据小于15，则返回全部数据
服务号：MP_00011
参数：{age}---页数，默认为1
返回：json
ret={serialno,operator,optime,dept,level,deliver,status,all}---流水号，发件人，发件时间，科室，紧急度，配送人，状态，页数
ret={id:0}返回失败

12.报修（小程序）
自动生成流水号，报修时间获取当前时间，维修状态为已报修
服务号：MP_00012
repairman为维修中心是默认值，代表未指定维修人
参数：{cell_no,location,detail,bfpic,category,level,repairman}---报修人手机号、报修地点、报修说明、拍照上传，维修类别，紧急度,维修人
返回：json
ret={id:0}返回失败

13.获取报修维修记录（小程序）
在报修维修表（T_maintain）查找
通过手机号判断是否为维修工
如果是维修工，
flag=0，返回所有状态为已报修的，维修人未指定的报修记录
flag=2, 返回所有状态为已受理或已维修的，维修人为自己的报修记录
flag=1, 返回所有状态为已验收的，维修人为自己的报修记录
如果不是维修工，
flag=0，返回所有状态为已报修的，报修人是自己的报修记录
flag=2, 返回所有状态为已受理或已维修的，报修人是自己的报修记录
flag=1, 返回所有状态为已验收的，报修人是自己的报修记录
服务号：MP_00013
参数：{del_no,flag}----手机号，报修人或维修人是我；1:我已完成
返回：json
ret={serialno,applicant,apltime,location,level,category,status}--流水号，报修人，报修时间，位置，紧急度，维修类别，状态
ret={id:0}返回失败

14.获取维修人员（小程序）
在用户表(T_User)返回工种profession为2且状态status为上班的人员
服务号：MP_00014
参数：{}
返回：json
ret={repairman}---维修人
ret={id:0}返回失败

15.获取地点（小程序）
在报修维修表（T_maintain）查找地点
服务号：MP_00015
参数：{}
返回：json
ret={location}---位置
ret={id:0}返回失败

16.查看报修维修详情（小程序 web）
从报修维修表（T_maintain）获取点击的报修维修信息详情
服务号：MP_00016
参数：{serialno}----流水号
返回：json
ret={serialno,applicant,apltime,location,detail,level,repairman,rectime,accepter,acctime,amount,afpic,category,status,reptime}
--流水号，报修人，报修时间，位置，报修说明，紧急度，维修人，接收时间，验收人，验收时间，维修金额，报修图片，维修类别，状态，维修耗时
ret={id:0}返回失败

17.维修接单（小程序）
将传的流水号从报修维修表（T_maintain）把状态改变为已受理，维修人为自己，接单时间为当前时间
服务号：MP_00017
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

18.完成维修（小程序）
将传的流水号从报修维修表（T_maintain）把状态改变为已维修，reptime为当前时间减去接单时间
服务号：MP_00018
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

19.报修验收（小程序）
将传的流水号从报修维修表（T_maintain）把状态改变为已验收
服务号：MP_00019
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

20.超时查询（web）
判断有没有要求取件时间，如果有，对比要求取件时间和实际取件时间，实际取件时间大于要求取间，则返回。按要求发件时间倒排
判断有没有要求送达时间，如果有，对比要求送达时间和实际送达时间，实际送达时间大于送达取间，则返回。按要求发件时间倒排
服务号：MP_00020
参数：{sign:0/1}---sign（0为超时取件，1为超时送达）
返回：json
ret={serialno,operator,optime,dept,level,deliver,status,all}---流水号，发件人，发件时间，科室，紧急度，配送人，状态，页数
ret={id:0}返回失败

21.配送人查询（web）
返回所有指定配送人的订单，按照发件时间倒排
服务号：MP_00021
参数：{age:1,deliver}---页数（默认为1），配送人
ret={serialno,operator,optime,dept,level,deliver,status,all}---流水号，发件人，发件时间，科室，紧急度，配送人，状态，页数
返回：json
ret={id:0}返回失败

22.验收标本（web）
判断有没有该流水号serialno，如果没有：返回id=0，如果有：判断状态status是否为配送中，如果是：返回id=1，如果不是：返回id=2
如果id=1在标本配送表（T_specimen）将状态status改为已验收，验收accepter为当前操作人，验收人号码acc_no为当前操作人号码，如果id!=1，则不操作
服务号：MP_00022
参数：{serialno}----流水号
返回：json
ret={id:0/1/2}返回失败0，返回成功1，返回跳级2

23.报修维修总览（web）
在维修报修（T_maintain）返回所有维修报修（按提交时间倒排）每页显示15条数据
如果数据小于15，则返回全部数据
如果有日期，则返回该日期的所有维修报修
服务号：MP_00023
参数：{age:1,time}---页数，默认为1，日期，默认为空
返回：json
ret={serialno,applicant,apltime,location,level,repairman,status,all}---流水号，报修人，报修时间，位置，紧急度，维修人，状态，页数
ret={id:0}返回失败

24.上报污物（小程序）
在污物报告表（T_lyma）自动生成流水号，上报时间spotime获取当前时间，状态status为已报修
服务号：MP_00024
disposer为保洁公司是默认值，代表未指定保洁人
参数：{cell_no,location,detail,bfpic,level，disposer}---上报人手机号、位置、上报说明、拍照上传，紧急度，保洁人
返回：json
ret={id:0}返回失败

25.获取污物报告（小程序）
在污物报告表（T_lyma）查找
通过手机号判断是否为清洁工
如果是清洁工，
flag=0，返回所有状态为已上报的，保洁人未指定的清洁记录
flag=2, 返回所有状态为已受理或已清理的，保洁人为自己的清洁记录
flag=1, 返回所有状态为已验收的，保洁人为自己的清洁记录
如果不是清洁工，
flag=0，返回所有状态为已上报的，上报人是自己的清洁记录
flag=2, 返回所有状态为已受理或已清理的，上报人是自己的清洁记录
flag=1, 返回所有状态为已验收的，上报人是自己的清洁记录
服务号：MP_00025
参数：{del_no,flag}----手机号，上报人spoter或处理人disposer为自己；1:我已完成
返回：json
ret={serialno,spoter,spotime,location,level,status}--流水号，上报人，上报时间，位置，紧急度，状态
ret={id:0}返回失败

26.获取处理人（小程序）
在用户表(T_User)返回工种profession为3且状态status为上班的人员
服务号：MP_00026
参数：{}
返回：json
ret={disposer}---处理人
ret={id:0}返回失败

27.获取地点（小程序）
在污物报告表（T_lyma）查找地点
服务号：MP_00027
参数：{}
返回：json
ret={location}---位置
ret={id:0}返回失败

28.查看污物报告详情（小程序 web）
从污物报告表（T_lyma）获取点击的污物报告信息详情
服务号：MP_00028
参数：{serialno}----流水号
返回：json
ret={serialno,spoter,spotime,location,detail,level,disposer,rectime,accepter,acctime,afpic,bfpic,status}
--流水号，上报人，上报时间，位置，上报说明，紧急度，处理人，接收时间，验收人，验收时间，上报图片，处理后图片，状态，
ret={id:0}返回失败

29.污物接单（小程序）
将传的流水号serialno从污物报告表（T_lyma）把状态改变status为已受理，处理人disposer为自己，接单时间rectime为当前时间
服务号：MP_00029
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

30.完成污物处理（小程序）
将传的流水号serialno从污物报告表（T_lyma）把状态status改变为已清洁
服务号：MP_00030
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

31.污物验收（小程序）
将传的流水号serialno从污物报告表（T_lyma）把状态status改变为已验收，验收人accepter为自己，验收时间acctime为当前时间
服务号：MP_00031
参数：{serialno}----流水号
返回：json
ret={id:0}返回失败

32.污物报告总览（web）
在污物报告表（T_lyma）返回所有污物报告（按提交时间倒排）每页显示15条数据
如果数据小于15，则返回全部数据
服务号：MP_00032
参数：{age}---页数，默认为1
返回：json
ret={serialno,spoter,spotime,location,level,disposer,status}---流水号，上报人，上报时间，位置，紧急度，处理人，状态
ret={id:0}返回失败

33.忘记密码（web）（删除）
在用户表（T_User）通过手机号cell_no修改密码password字段
服务号：MP_00033
参数：{cell_no,password,smscode}---手机号，密码，验证码
返回：json
ret={id:0}返回失败

34.查看外包人员（web）
在用户表（T_User）查看所有类别type为外包的人员
服务号：MP_00034
参数：{profession}--工种
返回：json
ret={User_name,ID,cell_no,ident,status,type,profession}---姓名，工号，手机号，身份证号，状态，类别，工种
ret={id:0}返回失败

35.人员排班（web）
返回id=0失败，id=1删除成功，id=2没有权限
只有类别type为外包管理的人才能修改，其他人没有权限，外包管理手动写入数据库
在用户表（T_User）改变状态status
服务号：MP_00035
参数：{cell_no,status}--手机号，状态
返回：json
ret={id:0}返回失败

36.删除外包人员（web）
返回id=0失败，id=1删除成功，id=2没有权限
只有类别type为外包管理的人才能删除，其他人没有权限，外包管理手动写入数据库
在用户表（T_User）删除该人员
服务号：MP_00036
参数：{cell_no}--手机号
返回：json
ret={id:0}返回失败

37.添加外包人员人（web）
返回id=0失败，id=1删除成功，id=2没有权限
只有类别type为外包管理的人才能添加，其他人没有权限，外包管理手动写入数据库
服务号：MP_00037
参数：{User_name,ident,cell_no,profession,status}---姓名，身份证号，手机号，工种，状态（默认上班）
返回：json
ret={id:0}返回失败

38.重置密码
服务号：MP_00038（web，小程序）
参数：{cell_no,password,smscode}---手机号，密码，验证码
返回：json
ret={id:0}返回失败

39.污物处理人（web）
在用户表(T_User)查找工种profession为污物报告（3）的人员
服务号：MP_00039
参数：{}
返回：json
ret={disposer}---处理人
ret={id:0}返回失败

40.筛选处理人（web）
在污物报告表（T_lyma）筛选出所有处理人disposer为某一个人的数据
服务号：MP_00040
参数：{disposer}---处理人
返回：json
ret={serialno,spoter,spotime,location,level,disposer,status}---流水号，上报人，上报时间，位置，紧急度，处理人，状态
ret={id:0}返回失败

41.筛选工种（web）
在用户表(T_User)中查找工种profession（0-4）的数据
服务号：MP_00041
参数：{profession}---工种
返回：json
ret={{User_name,ident,cell_no,profession,status}---姓名，身份证号，手机号，工种，状态
ret={id:0}返回失败

42.设置洗涤物品字典（web）
将参数保存到洗涤物品字典表（t_dict）
服务号：MP_00042
参数：{id,name,size}---编号，名称，规格
返回：json
ret={id:0}返回失败

43.科室提交被服（web）（修改）
将提交的数据保存到科室提交详情表（t_detail）
提交时间submitime为当前时间，自动生成流水号serialno，被服提交人submiter为当前用户，状态为待验收
服务号：MP_00043
参数：{detail,dept}被服类型，科室
返回：json
ret={id:0}返回失败

44.查看科室提交详情（web 小程序）
在病房提交详情表（t_detail）查看详情
服务号：MP_00044
参数：{serialno}--流水号
返回：json
ret-{serialno,detail,submiter,submitime,status,dept,packno}--流水号，被服类型，被服提交人，提交时间，状态，科室，打包流水号
ret={id:0}返回失败

45.科室更改被服数量（web）
将提交的数据保存到科室提交详情表（t_detail）
服务号：MP_00045
参数：{serialno,detail}--流水号，被服类型
返回：json
ret={id:0}返回失败

46.查看洗涤物品字典
查看洗涤物品字典表（t_dict）里所有数据
服务号：MP_00046
参数：{}
返回：json
ret={id,name,size}--编号，名称，规格
ret={id:0}返回失败

47.删除洗涤物品字典（web）
服务号：MP_00047
参数：{id}---编号
返回：json
ret={id:0}返回失败

48.修改洗涤物品字典（web）
服务号：MP_00048
参数：{id,name,size}--编号，名称，规格
返回：json
ret={id:0}返回失败

49.查看科室提交记录（web）
在科室提交详情表（t_detail）里查找所有数据。排序：先按照状态排，待验收-已验收-已打包。在按时间倒排
服务号：MP_00049
参数：{flag:0/1/2/3}--0=待验收，1=已验收，2=已打包，3=未送回（包含0、1、2）
返回：json
ret={serialno,submiter,submitime,status,detail,dept}--流水号，被服提交人，提交时间，状态，被服类型，科室
ret={id:0}返回失败

50.检查被服数量（小程序）
被服中心去科室收取被服，确定数量无误，在手机验收，科室提交详情表t_detail状态status改为已验收
服务号：MP_00050
参数：{serialno}--流水号
返回：json
ret={id:0}返回失败

51.打包（web）（修改）
根据前端传的流水号serialno，将数据打包，自动生成大流水号写入被服洗涤表（T_wash）流水号serialno中，再将大流水号serialno写入科室提交详情（t_detail）中总流水号中，科室提交详情（t_detail）状态改为已打包（前端做是否验收的判断）
被服洗涤表（T_wash）中提交人submiter为当前打包人员，提交时间submitime为当前时间，状态status为待接收
服务号：MP_00051
参数：{serialno}---流水号
返回：json
ret={id:0}返回失败

52.查看打包详情（web）
服务号：MP_00052
参数：{serialno}---流水号
返回：json
ret={serialno,submiter,submitime,rectime,pick,picktime,accepter,acctime,finisher,finitime,dept,room,status}---流水号，提交人，提交时间，接单时间，取件人，取件时间，验收人，验收时间，完成人，完成时间，科室，病房号，状态
ret={id:0}返回失败

53.外包人员接单（web）
被服洗涤表（T_wash）中接单时间rectime为当前时间，状态status为已接单
服务号：MP_00053
参数：{serialno}---流水号
返回：json
ret={id:0}返回失败

54.查看科室提交记录（小程序）
在科室提交详情表（t_detail）里查找所需数据。排序：提交时间倒排
服务号：MP_00054
参数：{flag:0/1/2}--0=待验收，1=已送回，2=已验收，已打包
返回：json
ret={serialno,submiter,submitime,status,detail,dept}--流水号，被服提交人，提交时间，状态，被服类型，科室
ret={id:0}返回失败

55.选择打包（web）
后台在科室提交详情（t_detail）查找是否存在待验收的数据，如果有id=2，返回所有待验收的数据。如果没有，id=1，返回所有已验收的数据。
服务号：MP_00055
参数：{}
返回：json
ret={serialno,submiter,submitime,status,detail,dept}--流水号，被服提交人，提交时间，状态，被服类型，科室
ret={id:0}返回失败

56.洗涤总览（web 小程序）
在被服洗涤（T_wash）表查看所有数据 排序：按状态依次排序 flag传0时，查询表6有没有未打包的数据，有则返回id=2，无则返回id=1，传1时不用查询
服务号：MP_00056
参数：{flag:0/1/2/3}--0已接单，1完成， 2已取件，验收  3全部
返回：json
ret={serialno,submiter,submitime,rectime,pick,picktime,accepter,acctime,status}--流水号，提交人，提交时间，接单时间，取件人，取件时间，验收人，验收时间，状态
ret={id:0}返回失败

57.查看批次号的所有科室（web）
在科室提交详情表（t_detail）查找同一打包流水号packno的全部科室dept
服务号：MP_00057
参数：{packno}--打包流水号
返回：json
ret：{dept,serialno}--科室，流水号
ret={id:0}返回失败


58.取件（小程序）
判断用户不等于医院才能操作，否则返回id=2
在被服洗涤（T_wash）表将状态status改为已取件
服务号：MP_00058
参数：{packno}--打包流水号
返回：json
ret={id:0}返回失败

59.被服验收(web)
判断用户等于医院才能操作，否则返回id=2
在被服洗涤（T_wash）表将状态status改为验收
服务号：MP_00059
参数：{packno}--打包流水号
返回：json
ret={id:0}返回失败

60.完成（web）
判断用户等于医院才能操作，否则返回id=2
判断科室提交详情表（t_detail）状态status是否为已送回，如果不是已送回，返回id=3
在被服洗涤（T_wash）表将状态status改为完成
服务号：MP_00060
参数：{packno}--打包流水号
返回：json
ret={id:0}返回失败

61.已送回（web）
用户表(T_User)科室dept从数字改成科室名字。
判断操作人的科室和科室提交详情（t_detail）的科室是否一致，如果不是，id=2，没有权限。
如果是，在科室提交详情（t_detail）将状态status改为已送回
服务号：MP_00061
参数：{serialno}--流水号
返回：json
ret={id:0}返回失败

62.科室提交记录筛选
通过状态status在科室提交详情（t_detail）表获取该状态的数据
服务号：MP_00062
参数：{status}--状态
返回：json
ret={serialno,submiter,submitime,status,detail,dept}--流水号，被服提交人，提交时间，状态，被服类型，科室
ret={id:0}返回失败

63.洗涤记录筛选
通过状态status在被服洗涤（T_wash）表获取该状态的数据
服务号：MP_00063
参数：{status}--状态
返回：json
ret={serialno,submiter,submitime,rectime,pick,picktime,accepter,acctime,status}--流水号，提交人，提交时间，接单时间，取件人，取件时间，验收人，验收时间，状态
ret={id:0}返回失败

64.添加位置
将数据保存到楼层信息表（t_address）里
服务号：MP_00064
参数：{addr,storey,detail}--地址，楼层，详细位置
返回：json
ret={id:0}返回失败

65.查看所有位置
在楼层信息表（t_address）里查找所有数据
服务号：MP_00065
参数：{}
返回：json
ret={addr,storey,detail,dt_no}--地址，楼层，详细位置，详细位置ID
ret={id:0}返回失败

66. 删除位置信息
在楼层信息表（t_address）里删除数据
服务号：MP_00066
参数：{dt_no}--详细位置ID
返回：json
ret={id=0}返回失败

67.获取楼栋号
在楼层信息表（t_address）里查找所有楼栋号
服务号：MP_00067
参数：{}
返回：json
ret={addr,ad_no}--地址
ret={id=0}返回失败

68.获取楼层号
在楼层信息表（t_address）里查找楼栋号所对应的楼层号
服务号：MP_00068
参数：{ad_no}---地址ID
返回：json
ret={storey,st_no}--楼层，楼层ID
ret={id=0}返回失败

69.获取详细位置
在楼层信息表（t_address）里查找楼层号所对应的详细位置
服务号：MP_00069
参数：{ad_no,st_no}---地址ID，楼层ID
返回：json
ret={storey,dt_no}--详细位置，详细位置id
ret={id=0}返回失败